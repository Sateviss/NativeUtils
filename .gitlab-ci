variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - prepare
  - Build Native
  - Compress Native
  - test
  - release
  - publish
  - clean-up

Prepare:
  stage: prepare
  script:
    - export CI_PUSH_URL=`echo $CI_REPOSITORY_URL | perl -pe 's#.*@(.+?(\:\d+)?)/#git@\1:#'`
    - echo $CI_PUSH_URL
    - git config user.name "Robot"
    - git config user.email "<internal@rtmath.net>"
    - git checkout -b pipeline-$CI_PIPELINE_ID
    - ./gradlew prepareReleaseVersion
    - git commit -am "[Skip CI] Generate release version"
    - ./gradlew prepareSnapshotVersion
    - git commit -am "[Skip CI] Generate next development version"
    - git remote set-url --push origin "${CI_PUSH_URL}"
    - git push origin -u pipeline-$CI_PIPELINE_ID
  tags:
    - Linux
    - ShellExecutor
  only:
    - /release-.*$/
  except:
    - tags

Build-Native-Linux:
  stage: Build Native
  script:
    - git checkout origin/pipeline-$CI_PIPELINE_ID~1 || true
    - cd csharp
    - ./build.sh --target BuildNativeLinux
    - ./build.sh --script samples.cake --target BuildNativeLinuxLibs
  artifacts:
    paths:
      - native/bin
      - native-lib/bin
    expire_in: 1 week
  tags:
    - Linux
    - ShellExecutor

Build-Native-Windows:
  stage: Build Native
  script:
    - git checkout origin/pipeline-$CI_PIPELINE_ID~1; if (-not $?) { cmd.exe /c "exit 0" }
    - cd csharp
    - ./build -target BuildNativeWindows
    - ./build -script samples.cake -target BuildNativeWindowsLibs
  artifacts:
    paths:
      - native/bin
      - native-lib/bin
    expire_in: 1 week
  tags:
    - Windows
    - ShellExecutor

Compress Native:
  stage: Compress Native
  script:
    - git checkout origin/pipeline-$CI_PIPELINE_ID~1 || true
    - cd csharp
    - ./build.sh --target CompressNative
    - ./build.sh --script samples.cake --target CompressNativeLibs
  dependencies:
    - "Build-Native-Windows"
    - "Build-Native-Linux"
  artifacts:
    paths:
      - native/bin
      - native-lib/bin
    expire_in: 1 week
  tags:
    - Linux
    - ShellExecutor

Test-Java7-Linux:
  image: packages.deltixhub.com:443/gitlabci.docker/open-jdk-7-gradle-4.6:latest
  stage: test
  script:
    - git checkout origin/pipeline-$CI_PIPELINE_ID~1 || true
    - ./gradlew check
    - ./gradlew run
  artifacts:
    paths:
      - java/main/build/reports/tests/*
    when: on_failure
  tags:
    - Linux
    - DockerExecutor

Test-Java7-Windows:
  stage: test
  script:
    - git checkout origin/pipeline-$CI_PIPELINE_ID~1; if (-not $?) { cmd.exe /c "exit 0" }
    - ./gradlew check
    - ./gradlew run
  artifacts:
    paths:
      - java/main/build/reports/tests/*
    when: on_failure
  tags:
    - Windows
    - ShellExecutor

Test-.NET-Windows:
  stage: test
  script:
    - git checkout origin/pipeline-$CI_PIPELINE_ID~1; if (-not $?) { cmd.exe /c "exit 0" }
    - cd csharp
    - ./build -target Run-Unit-Tests
  tags:
    - Windows
    - ShellExecutor
  dependencies:
    - Compress Native
  artifacts:
    paths:
      - csharp/Functions.Dll/bin
    expire_in: 1 week

Test-.NET-Linux:
  image: microsoft/dotnet
  stage: test
  script:
    - git checkout origin/pipeline-$CI_PIPELINE_ID~1 || true
    - cd csharp
    - ./build.sh --target Run-Unit-Tests
  tags:
    - Linux
    - ShellExecutor
  dependencies:
    - Compress Native
  artifacts:
    paths:
      - csharp/Functions.Dll/bin
    expire_in: 1 week

Release:
  stage: release
  script:
    - export CI_PUSH_URL=`echo $CI_REPOSITORY_URL | perl -pe 's#.*@(.+?(\:\d+)?)/#git@\1:#'`
    - echo $CI_PUSH_URL
    - git config user.name "Robot"
    - git config user.email "<internal@rtmath.net>"
    - git remote set-url --push origin "${CI_PUSH_URL}"
    - git checkout origin/pipeline-$CI_PIPELINE_ID~1
    - ./gradlew pushVersion
    - git checkout origin/pipeline-$CI_PIPELINE_ID
    - git push origin origin/pipeline-$CI_PIPELINE_ID:${CI_BUILD_REF_NAME}
  tags:
    - Linux
    - ShellExecutor
  only:
    - /release-.*$/
  except:
    - tags

Publish:
  stage: publish
  image: packages.deltixhub.com:443/gitlabci.docker/open-jdk-7-gradle-4.6:latest
  script:
    - git checkout origin/pipeline-$CI_PIPELINE_ID~1 || true
    - ./gradlew publish
  only:
    - /release-.*$/
  tags:
    - Linux
    - DockerExecutor
  except:
    - tags

Clean Up:
  stage: clean-up
  script:
    - export CI_PUSH_URL=`echo $CI_REPOSITORY_URL | perl -pe 's#.*@(.+?(\:\d+)?)/#git@\1:#'`
    - git config user.name "Robot"
    - git config user.email "<internal@rtmath.net>"
    - git remote set-url --push origin "${CI_PUSH_URL}"
    - git push origin --delete pipeline-$CI_PIPELINE_ID
  only:
    - /release-.*$/
  when: always
  tags:
    - Linux
    - ShellExecutor
  except:
    - tags
